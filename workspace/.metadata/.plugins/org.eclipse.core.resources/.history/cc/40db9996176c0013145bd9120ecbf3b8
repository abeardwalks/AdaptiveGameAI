package players;

import java.util.Observable;
import java.util.Observer;

import board.Phase;

import interfaces.GameStateInterface;
import interfaces.PlayerInterface;

public class RandomAI implements PlayerInterface, Observer {
	
	private char tokenColour;
	private final String name = "RandomAI";
	private GameStateInterface gs;
	private int result;
	private char turn;

	@Override
	public String getName() {
		return name;
	}

	@Override
	public char getTokenColour() {
		return tokenColour;
	}

	@Override
	public void setTokenColour(char tokenColour) {
		this.tokenColour = tokenColour;
	}

	@Override
	public void intialize(GameStateInterface gs) {
		this.gs = gs;
		turn = 'R';
	}

	@Override
	public void makeMove() {
		if(turn == tokenColour){
			if((phase.equals(Phase.ONE) || result == -2 || result == 1 || phase.equals(Phase.THREE))){
				makeHumanPlacement(xc, yc);
			}
			if((phase.equals(Phase.TWO) || phase.equals(Phase.THREE)) && (result == 0 || result == -1)){
				makeHumanMove(xc, yc, xr, yr);
			}
			phase = gs.getPhase();
		}
	}

	@Override
	public void update(Observable arg0, Object arg1) {
		
	}

}
